const logger = require('logger');
const pConfig = require('../../private/config-private');
const SpotifyApiNode = require('spotify-web-api-node');

module.exports = SpotifyApi;

function SpotifyApi(userRefreshToken) {
    this.refreshToken = userRefreshToken;
    this.accessToken; // to be determined...
    this.initializeApi()
        .then(() => logger.debug('api object initialized'))
        .catch((err) => logger.error('failed to initialize api object: ' + err.toString()));
};

/**
 * initialize api object
 */
SpotifyApi.prototype.initializeApi = function() {
    let self = this;
    return this.getSpotifyApi(this.refreshToken)
        .then((api) => {
            self.api = api;
            return;
        });
};

/**
 * get a spotify api wrapper object 
 */
SpotifyApi.prototype.getSpotifyApi = function(userToken) {
    if (userToken)
        return this.getUserTokenApi(userToken);
    
    return this.getServerTokenApi();
};

/**
 * Get a spotify api wrapper object using user's token
 * @param {string} userToken - User's refresh token
 */
SpotifyApi.prototype.getUserTokenApi = function(userToken) {
    let api = new SpotifyApiNode({
        clientId: pConfig.spotify.clientId,
        clientSecret: pConfig.spotify.clientSecret
    });
    return this.setAccessToken(api, userToken)
        .then(() => {
            return api;
        });
};

/**
 * set the access token for specified spotify object
 * @param {*} api - spotify wrapper object
 * @param {*} refreshToken - user's refresh token used for spotify authorization
 */
SpotifyApi.prototype.setAccessToken = function(api, refreshToken) {
    api.setRefreshToken(refreshToken);
    return api.refreshAccessToken()
        .then((data) => {
            logger.info(data.body['access_token']);
            api.setAccessToken(data.body['access_token']);
        });
};

/**
 * get access token, or refresh and get if needed
 */
SpotifyApi.prototype.getAccessToken = function() {

};

/**
 * get a spotify api wrapper object using server token
 */
SpotifyApi.prototype.getServerTokenApi = function() {

};

